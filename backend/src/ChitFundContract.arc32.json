{
  "hints": {
    "createApplication(uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "startChit()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "addMember(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "removeMember(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "contribute()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "submitBid(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "distributePot(address,uint64,address[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getCurrentMonth()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getChitStatus()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "pauseChit()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "resumeChit()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "updateTotalMembers(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "manager": {
          "type": "bytes",
          "key": "manager"
        },
        "monthlyContribution": {
          "type": "uint64",
          "key": "monthlyContribution"
        },
        "managerCommissionPercent": {
          "type": "uint64",
          "key": "managerCommissionPercent"
        },
        "totalMembers": {
          "type": "uint64",
          "key": "totalMembers"
        },
        "currentMonth": {
          "type": "uint64",
          "key": "currentMonth"
        },
        "chitValue": {
          "type": "uint64",
          "key": "chitValue"
        },
        "isActive": {
          "type": "uint64",
          "key": "isActive"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 6
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "ChitFundSimple",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "monthlyContrib",
            "type": "uint64"
          },
          {
            "name": "commissionPercent",
            "type": "uint64"
          },
          {
            "name": "totalMembersCount",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "startChit",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "addMember",
        "args": [
          {
            "name": "memberAddress",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "removeMember",
        "args": [
          {
            "name": "memberAddress",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "contribute",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "submitBid",
        "args": [
          {
            "name": "discountPercent",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "distributePot",
        "args": [
          {
            "name": "winnerAddress",
            "type": "address"
          },
          {
            "name": "discountPercent",
            "type": "uint64"
          },
          {
            "name": "memberAddresses",
            "type": "address[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "getCurrentMonth",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "getChitStatus",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "pauseChit",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "resumeChit",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "updateTotalMembers",
        "args": [
          {
            "name": "newTotal",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}